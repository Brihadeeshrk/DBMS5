Consider the Banking database â€“ CUSTOMER, BRANCH, ACCOUNT and TRANSACTION. An
    account can be a savings account or a current account. Customer can have both types of accounts. The
    transactions can be a deposit or a withdrawal. Mention the constraints neatly
        a) Design the ER diagram for the problem statement
        b) State the schema diagram for the ER diagram.
        c) Create the above tables, insert suitable tuples and perform the following operations in
        SQL:
            1. Obtain the details of customers who have both Savings and Current Account.
            2. Retrieve the details of branches and the number of accounts in each branch.
            3. Obtain the details of customers who have performed at least 3 transactions.
            4. List the details of branches where the number of accounts is less than the
            average number of accounts in all branches.

a) -
b) -
c) 

CREATE TABLE CUSTOMER(
    CID NUMBER(5) PRIMARY KEY, 
    CNAME VARCHAR2(30)
);

CREATE TABLE BRANCH(
    BCODE VARCHAR2(5) PRIMARY KEY, 
    BNAME VARCHAR2(30)
);

CREATE TABLE ACCOUNT( 
    ANO VARCHAR2(5) PRIMARY KEY, 
    ATYPE CHAR(2), 
    BALANCE NUMBER(7), 
    CID NUMBER(5), 
    BCODE VARCHAR2(5),
    FOREIGN KEY(CID) REFERENCES CUSTOMER(CID),
    FOREIGN KEY(BCODE) REFERENCES BRANCH(BCODE)
);

CREATE TABLE TRANSACTION( 
    TID VARCHAR2(5) PRIMARY KEY, 
    ANO VARCHAR2(5),  
    TTYPE CHAR(2), 
    TDATE DATE, 
    TAMOUNT NUMBER(7),
    FORIGN KEY (ANO) REFERENCES ACCOUNT(ANO)
);

    1. SELECT A1.CID
    FROM ACCOUNT A1, ACCOUNT A2
    WHERE A1.ATYPE='S' AND A2.TYPE='C'
    AND A1.CID = A2.CID;

    2.  SELECT B.BCODE, B.NAME, COUNT(A.ANO)
    FROM BRANCH B, ACCOUNT A
    WHERE B.BCODE = A.BCODE
    GROUP BY B.BCODE, B.NAME

    3.  SELECT *
    FROM CUSTOMER
    WHERE CID IN (
        SELECT CID
        FROM ACCOUNT
        WHERE ANO IN (
            SELECT ANO
            FROM TRANSACTION
            GROUP BY ANO
            HAVING COUNT(ANO) >= 3
        )
    );

    4.  SELECT B.BCODE, B.BNAME, COUNT(A.ANO) AS TOTAL
    FROM BRANCH B, ACCOUNT A
    WHERE B.BCODE = A.BCODE
    GROUP BY B.BCODE, B.BNAME
    HAVING COUNT(A.ANO) < (
        SELECT COUNT(ANO)/5
        FROM ACCOUNT
    );